syntax = "proto3";

package syft.core.tensor;
import "proto/core/common/common_object.proto";
// import "proto/core/adp/entity.proto";
import "proto/lib/numpy/array.proto";

message Tensor {
  //syft.core.common.UID id = 1;
  //string obj_type = 1;
  //optional syft.core.adp.Entity entity = 3;
  bool use_tensors = 1;
  repeated syft.lib.numpy.NumpyProto arrays = 2;
  repeated Tensor tensors = 3;
  bool requires_grad = 4;
}

// DataTensor<GenericTensor>
//     self.data: np.ndarray

// AutogradTensor<GenericTensor>
//     self.child: GenericTensor
//     self.grad: GenericTensor
// Tensor<GenericTensor>
//     self.child: GenericTensor
// SingleEntityPhiTensor<GenericTensor>
//     self.entity = entity: Entity
//     self._min_vals: [GenericTensor]
//     self._max_vals: [GenericTensor]
// RowEntityPhiTensor<GenericTensor>
//     self.child: [GenericTensor]
